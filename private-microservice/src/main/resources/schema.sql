
DROP TABLE IF EXISTS users, categories, compilations, locations, events, comments, participations,
    compilation_event, requests, comments CASCADE;



CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT uq_category_name UNIQUE (name)
);


CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(120) NOT NULL,
    pinned BOOLEAN,
    CONSTRAINT uq_compilation_name UNIQUE (title)
);


CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL,
    CONSTRAINT uq_user_email UNIQUE (email)
);


CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat INTEGER NOT NULL,
    lon INTEGER NOT NULL
);


CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000),
    category_id        BIGINT,
    created_on         TIMESTAMP  WITHOUT TIME ZONE   NOT NULL,
    description        VARCHAR(7000),
    event_date         TIMESTAMP  WITHOUT TIME ZONE   NOT NULL,
    initiator_id       BIGINT,
    location_id        BIGINT,
    paid               BOOLEAN,
    participant_limit  INTEGER,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state              VARCHAR(70),
    title              VARCHAR(120),
    views              BIGINT        NOT NULL,
    CONSTRAINT fk_events_categories FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_locations FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE
);



CREATE TABLE IF NOT EXISTS compilation_event
(
    compilation_id BIGINT REFERENCES compilations (id),
    event_id       BIGINT REFERENCES events (id),
    PRIMARY KEY (compilation_id, event_id)
);


CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP WITHOUT TIME ZONE,
    event_id     BIGINT,
    requester_id BIGINT,
    status       VARCHAR(40),
    CONSTRAINT fk_request_event FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_request_user FOREIGN KEY (requester_id) REFERENCES users (id)
);


CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    text VARCHAR(2000) NOT NULL,
    user_id BIGINT,
    event_id BIGINT,
    created TIMESTAMP NOT NULL,
    CONSTRAINT fk_comment_user FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_comment_event FOREIGN KEY (event_id) REFERENCES events (id)
);

