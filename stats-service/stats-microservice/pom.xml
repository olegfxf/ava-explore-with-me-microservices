<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ru.practicum</groupId>
		<artifactId>stats-service</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>ru.practicum</groupId>
	<artifactId>stats-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>stats-microservice</name>

	<description>stats-microservice</description>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<start-class>ru.practicum.stats.StatsMicroserviceApplication</start-class>
	</properties>

	<dependencies>



		<dependency>
			<groupId>ru.practicum.dto</groupId>
			<artifactId>dto</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>




		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-spring-boot-starter</artifactId>
			<version>2.14.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>


		<plugins>


			<!--                        <plugin>-->
			<!--                            <groupId>org.springframework.boot</groupId>-->
			<!--                            <artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--                            <configuration>-->
			<!--                                <mainClass>${spring.boot.mainclass}</mainClass>-->
			<!--                            </configuration>-->
			<!--                        </plugin>-->



			<!--            <plugin>-->
			<!--                <groupId>org.apache.maven.plugins</groupId>-->
			<!--                <artifactId>maven-jar-plugin</artifactId>-->
			<!--                <version>${maven-jar-plugin.version}</version>-->
			<!--                <configuration>-->
			<!--                    <archive>-->
			<!--                        <manifest>-->
			<!--                            <mainClass>ru.practicum.admin.AdminMicroserviceApplication</mainClass>-->
			<!--                        </manifest>-->
			<!--                    </archive>-->
			<!--                </configuration>-->
			<!--            </plugin>-->


			<!--        Строит jar-файл с правильным  Main-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.10</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<baseImage>amazoncorretto:11-alpine-jdk</baseImage>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar", "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n"]</entryPoint>
					<!-- copy the service's jar file from target into the root directory of the image -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<!-- https://mvnrepository.com/artifact/javax.activation/activation -->
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
						<version>1.1.1</version>
					</dependency>
				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
